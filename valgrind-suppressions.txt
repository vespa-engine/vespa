{
   NPTL keeps a cache of thread stacks, and metadata for thread local storage is not freed for threads in that cache
   Memcheck:Leak
   fun:calloc
   fun:_dl_allocate_tls
   fun:pthread_create@@GLIBC_2.17
}
{
   NPTL keeps a cache of thread stacks, and metadata for thread local storage is not freed for threads in that cache
   Memcheck:Leak
   fun:calloc
   fun:UnknownInlinedFun
   fun:allocate_dtv
   fun:_dl_allocate_tls
   fun:pthread_create@@GLIBC_2.17
}
{
   NPTL keeps a cache of thread stacks, and metadata for thread local storage is not freed for threads in that cache
   Memcheck:Leak
   fun:calloc
   fun:UnknownInlinedFun
   fun:allocate_dtv
   fun:_dl_allocate_tls
   fun:allocate_stack
   fun:pthread_create@@GLIBC_2.17
}
{
   NPTL keeps a cache of thread stacks, and metadata for thread local storage is not freed for threads in that cache
   Memcheck:Leak
   fun:calloc
   fun:UnknownInlinedFun
   fun:allocate_dtv
   fun:_dl_allocate_tls
   fun:pthread_create@@GLIBC_2.2.5
}
{
   NPTL keeps a cache of thread stacks, and metadata for thread local storage is not freed for threads in that cache
   Memcheck:Leak
   fun:calloc
   fun:UnknownInlinedFun
   fun:allocate_dtv
   fun:_dl_allocate_tls
   fun:allocate_stack
   fun:pthread_create@@GLIBC_2.2.5
}
{
   NPTL keeps a cache of thread stacks, and metadata for thread local storage is not freed for threads in that cache
   Memcheck:Leak
   fun:calloc
   fun:allocate_dtv
   fun:_dl_allocate_tls
   fun:allocate_stack
   fun:pthread_create@@GLIBC_2.2.5
}
{
   NPTL keeps a cache of thread stacks, and metadata for thread local storage is not freed for threads in that cache
   Memcheck:Leak
   fun:calloc
   fun:_dl_allocate_tls
   fun:pthread_create@@GLIBC_2.2.5
}
{
   NPTL keeps a cache of thread stacks, and metadata for thread local storage is not freed for threads in that cache
   Memcheck:Leak
   fun:calloc
   fun:allocate_dtv
   fun:_dl_allocate_tls
   fun:pthread_create@@GLIBC_2.2.5
}
{
   This is a bug in glibc. We can not suffer for that.
   Memcheck:Free
   fun:free
   fun:free_mem
   fun:__libc_freeres
   fun:_vgnU_freeres
   fun:exit
   fun:(below main)
}
{
   RHEL6 strlen is eager and will read 16 bytes blocks.
   Memcheck:Cond
   fun:__strlen_sse42
}

{
   Strange problem sometimes happens in backtrace function in glibc:
   Memcheck:Addr4
   fun:_Unwind_Backtrace
   fun:backtrace
}
{
   Strange problem sometimes happens in backtrace function in glibc:
   Memcheck:Addr8
   fun:_Unwind_Backtrace
   fun:backtrace
}

{
   dlopen_suppression_1
   Memcheck:Leak
   fun:malloc
   fun:decompose_rpath
   fun:_dl_map_object
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc
}
{
   dlopen_suppression_2
   Memcheck:Leak
   fun:malloc
   fun:decompose_rpath
   fun:_dl_map_object
   fun:openaux
   fun:_dl_catch_error
   fun:_dl_map_object_deps
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc
}
{
   dlopen_suppression_3
   Memcheck:Leak
   fun:malloc
   fun:open_path
   fun:_dl_map_object
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc
}
{
   dlopen_suppression_4
   Memcheck:Leak
   fun:malloc
   fun:_dl_new_object
   fun:_dl_map_object_from_fd
   fun:_dl_map_object
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc
}
{
   dlopen_suppression_5
   Memcheck:Leak
   fun:calloc
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc
}
{
   dlopen_suppression_6
   Memcheck:Leak
   fun:malloc
   fun:expand_dynamic_string_token
   fun:_dl_map_object
   fun:openaux
   fun:_dl_catch_error
   fun:_dl_map_object_deps
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc
}
{
   dlopen_suppression_7
   Memcheck:Leak
   fun:malloc
   fun:open_path
   fun:_dl_map_object
   fun:openaux
   fun:_dl_catch_error
   fun:_dl_map_object_deps
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc
}
{
   dlopen_suppression_8
   Memcheck:Leak
   fun:malloc
   fun:local_strdup
   fun:_dl_map_object
   fun:openaux
   fun:_dl_catch_error
   fun:_dl_map_object_deps
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc
}
{
   dlopen_suppression_9
   Memcheck:Leak
   fun:malloc
   fun:_dl_lookup_symbol_x
   fun:_dl_relocate_object
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc
}
{
   dlopen_suppression_10
   Memcheck:Leak
   fun:malloc
   fun:_dl_new_object
   fun:_dl_map_object_from_fd
   fun:_dl_map_object
   fun:openaux
   fun:_dl_catch_error
   fun:_dl_map_object_deps
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc
}
{
   dlopen_suppression_11
   Memcheck:Leak
   fun:calloc
   fun:_dl_new_object
   fun:_dl_map_object_from_fd
   fun:_dl_map_object
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc
}
{
   dlopen_suppression_12
   Memcheck:Leak
   fun:calloc
   fun:_dl_check_map_versions
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc
}
{
   dlopen_suppression_13
   Memcheck:Leak
   fun:calloc
   fun:do_lookup_x
   fun:_dl_lookup_symbol_x
   fun:_dl_relocate_object
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc
}
{
   dlopen_suppression_14
   Memcheck:Leak
   fun:calloc
   fun:_dl_new_object
   fun:_dl_map_object_from_fd
   fun:_dl_map_object
   fun:openaux
   fun:_dl_catch_error
   fun:_dl_map_object_deps
   fun:dl_open_worker
   fun:_dl_catch_error
   fun:_dl_open
   fun:dlopen_doit
   fun:_dl_catch_error
   fun:_dlerror_run
   fun:dlopen@@GLIBC_2.2.5
   fun:_ZN26FastOS_UNIX_DynamicLibrary4OpenEPKc
}
{
   This supresses a bug in valgrind-3.10.1. It is fixed in version 3.11.0. (http://permalink.gmane.org/gmane.comp.kde.devel.bugs/1594999)
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   fun:_ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag
   fun:_ZNSsC1EPKcRKSaIcE
   obj:/usr/lib64/llvm/libLLVM-3.4.so
   ...
}
{
   This supresses a bug in valgrind-3.10.1. It is fixed in version 3.11.0. (http://permalink.gmane.org/gmane.comp.kde.devel.bugs/1594999)
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSs4_Rep9_S_createEmmRKSaIcE
   ...
   fun:__static_initialization_and_destruction_0
   ...
}
{
   Needed to avoid leak errors on static wchar strings when using the fastos process proxy
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZNSbIwSt11char_traitsIwESaIwEE4_Rep9_S_createEmmRKS1_
   ...
   fun:__static_initialization_and_destruction_0
   ...
}
{
   Apparent memory leak on Fedora 28.
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:tsearch
   fun:__add_to_environ
   fun:setenv
}
{
   Apparent memory leak on Fedora 28.
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:__add_to_environ
   fun:setenv
}
{
   RE2 sparse structures deliberately do not care about uninitialized memory (https://github.com/google/re2/issues/121)
   Memcheck:Cond
   ...
   fun:_ZN3re28Compiler7CompileEPNS_6RegexpEbl
}
{
   RE2 sparse structures deliberately do not care about uninitialized memory (https://github.com/google/re2/issues/121)
   Memcheck:Value8
   ...
   fun:_ZN3re28Compiler7CompileEPNS_6RegexpEbl
}
{
   RE2 sparse structures deliberately do not care about uninitialized memory (https://github.com/google/re2/issues/121)
   Memcheck:Cond
   ...
   fun:_ZN3re23RE2C1ERKNS_11StringPieceERKNS0_7OptionsE
}
{
   RE2 sparse structures deliberately do not care about uninitialized memory (https://github.com/google/re2/issues/121)
   Memcheck:Value8
   ...
   fun:_ZN3re23RE2C1ERKNS_11StringPieceERKNS0_7OptionsE
}
{
   RE2 sparse structures deliberately do not care about uninitialized memory (https://github.com/google/re2/issues/121)
   Memcheck:Value8
   ...
   fun:_ZNK3re23RE25MatchERKNS_11StringPieceEmmNS0_6AnchorEPS1_i
}
{
   RE2 sparse structures deliberately do not care about uninitialized memory (https://github.com/google/re2/issues/121)
   Memcheck:Cond
   ...
   fun:_ZNK3re23RE25MatchERKNS_11StringPieceEmmNS0_6AnchorEPS1_i
}
{
   RE2 sparse structures deliberately do not care about uninitialized memory (https://github.com/google/re2/issues/121)
   Memcheck:Cond
   ...
   fun:_ZNK3re23RE218PossibleMatchRangeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_i
}
{
   RE2 sparse structures deliberately do not care about uninitialized memory (https://github.com/google/re2/issues/121)
   Memcheck:Value8
   ...
   fun:_ZNK3re23RE218PossibleMatchRangeEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_i
}
{
   Protobuf 5.26.1 suppression 1
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:allocate
   fun:allocate
   fun:allocate
   fun:Allocate<8, std::allocator<char> >
   fun:_ZN4absl12lts_2024011618container_internal19HashSetResizeHelper15InitializeSlotsISaIcELm8ELb1ELm8EEEbRNS1_12CommonFieldsEPvT_.isra.0
   fun:_ZN4absl12lts_2024011618container_internal12raw_hash_setINS1_17FlatHashSetPolicyIPKN6google8protobuf8internal15DescriptorTableEEENS5_12_GLOBAL__N_123GeneratedMessageFactory20DescriptorByNameHashENSC_18DescriptorByNameEqESaIS9_EE6resizeEm
   fun:rehash_and_grow_if_necessary
   fun:_ZN4absl12lts_2024011618container_internal12raw_hash_setINS1_17FlatHashSetPolicyIPKN6google8protobuf8internal15DescriptorTableEEENS5_12_GLOBAL__N_123GeneratedMessageFactory20DescriptorByNameHashENSC_18DescriptorByNameEqESaIS9_EE14prepare_insertEm
   fun:find_or_prepare_insert<const google::protobuf::internal::DescriptorTable*>
   fun:operator()<const google::protobuf::internal::DescriptorTable*, const google::protobuf::internal::DescriptorTable* const&>
   fun:DecomposeValue<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashSetPolicy<const google::protobuf::internal::DescriptorTable*>, google::protobuf::(anonymous namespace)::GeneratedMessageFactory::DescriptorByNameHash, google::protobuf::(anonymous namespace)::GeneratedMessageFactory::DescriptorByNameEq, std::allocator<const google::protobuf::internal::DescriptorTable*> >::EmplaceDecomposable, const google::protobuf::internal::DescriptorTable* const&>
   fun:apply<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashSetPolicy<const google::protobuf::internal::DescriptorTable*>, google::protobuf::(anonymous namespace)::GeneratedMessageFactory::DescriptorByNameHash, google::protobuf::(anonymous namespace)::GeneratedMessageFactory::DescriptorByNameEq, std::allocator<const google::protobuf::internal::DescriptorTable*> >::EmplaceDecomposable, const google::protobuf::internal::DescriptorTable* const&>
   fun:apply<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashSetPolicy<const google::protobuf::internal::DescriptorTable*>, google::protobuf::(anonymous namespace)::GeneratedMessageFactory::DescriptorByNameHash, google::protobuf::(anonymous namespace)::GeneratedMessageFactory::DescriptorByNameEq, std::allocator<const google::protobuf::internal::DescriptorTable*> >::EmplaceDecomposable, const google::protobuf::internal::DescriptorTable* const&>
   fun:emplace<const google::protobuf::internal::DescriptorTable* const&>
   fun:insert<const google::protobuf::internal::DescriptorTable*>
   fun:RegisterFile
   fun:_ZN6google8protobuf14MessageFactory29InternalRegisterGeneratedFileEPKNS0_8internal15DescriptorTableE
   fun:call_init.part.0
   fun:call_init
   fun:_dl_init
   obj:/usr/lib64/ld-2.28.so
}
{
   Protobuf 5.26.1 suppression 2
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:allocate
   fun:allocate
   fun:allocate
   fun:_S_allocate
   fun:_M_create
   fun:_M_construct<char*>
   fun:basic_string
   fun:pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, 0, const google::protobuf::Descriptor::WellKnownType&, 0>
   fun:pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const google::protobuf::Descriptor::WellKnownType&>
   fun:construct_at<std::pair<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >
   fun:construct<std::pair<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >
   fun:construct<std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> >, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >
   fun:construct<std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> >, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >
   fun:construct<std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> >, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >
   fun:construct<const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >
   fun:emplace_at<const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >
   fun:operator()<std::__cxx11::basic_string<char>, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >
   fun:DecomposePairImpl<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashMapPolicy<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>, absl::lts_20240116::container_internal::StringHash, absl::lts_20240116::container_internal::StringEq, std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> > >::EmplaceDecomposable, const std::__cxx11::basic_string<char>&, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >
   fun:DecomposePair<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashMapPolicy<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>, absl::lts_20240116::container_internal::StringHash, absl::lts_20240116::container_internal::StringEq, std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> > >::EmplaceDecomposable, const std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, google::protobuf::Descriptor::WellKnownType>&>
   fun:apply<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashMapPolicy<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>, absl::lts_20240116::container_internal::StringHash, absl::lts_20240116::container_internal::StringEq, std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> > >::EmplaceDecomposable, const std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, google::protobuf::Descriptor::WellKnownType>&>
   fun:apply<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashMapPolicy<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>, absl::lts_20240116::container_internal::StringHash, absl::lts_20240116::container_internal::StringEq, std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> > >::EmplaceDecomposable, const std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, google::protobuf::Descriptor::WellKnownType>&>
   fun:emplace<const std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, google::protobuf::Descriptor::WellKnownType>&>
   fun:insert<const std::pair<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>*>
   fun:insert
   fun:_ZN6google8protobuf14DescriptorPool6TablesC1Ev
   fun:_ZN6google8protobuf14DescriptorPoolC1EPNS0_18DescriptorDatabaseEPNS1_14ErrorCollectorE
   fun:NewGeneratedPool
   fun:_ZN6google8protobuf14DescriptorPool23internal_generated_poolEv
   fun:_ZN6google8protobuf14DescriptorPool24InternalAddGeneratedFileEPKvi
   fun:AddDescriptorsImpl
   fun:AddDescriptors
   fun:_ZN6google8protobuf8internal14AddDescriptorsEPKNS1_15DescriptorTableE
   fun:call_init.part.0
   fun:call_init
   fun:_dl_init
   obj:/usr/lib64/ld-2.28.so
}
{
   Protobuf 5.26.1 suppression 3
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:allocate
   fun:allocate
   fun:allocate
   fun:Allocate<8, std::allocator<char> >
   fun:_ZN4absl12lts_2024011618container_internal19HashSetResizeHelper15InitializeSlotsISaIcELm40ELb0ELm8EEEbRNS1_12CommonFieldsEPvT_.isra.0
   fun:_ZN4absl12lts_2024011618container_internal12raw_hash_setINS1_17FlatHashMapPolicyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN6google8protobuf10Descriptor13WellKnownTypeEEENS1_10StringHashENS1_8StringEqESaISt4pairIKS9_SD_EEE6resizeEm
   fun:rehash_and_grow_if_necessary
   fun:_ZN4absl12lts_2024011618container_internal12raw_hash_setINS1_17FlatHashMapPolicyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN6google8protobuf10Descriptor13WellKnownTypeEEENS1_10StringHashENS1_8StringEqESaISt4pairIKS9_SD_EEE14prepare_insertEm
   fun:find_or_prepare_insert<std::__cxx11::basic_string<char> >
   fun:operator()<std::__cxx11::basic_string<char>, const std::piecewise_construct_t&, std::tuple<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >
   fun:DecomposePairImpl<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashMapPolicy<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>, absl::lts_20240116::container_internal::StringHash, absl::lts_20240116::container_internal::StringEq, std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> > >::EmplaceDecomposable, const std::__cxx11::basic_string<char>&, std::tuple<const google::protobuf::Descriptor::WellKnownType&> >
   fun:DecomposePair<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashMapPolicy<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>, absl::lts_20240116::container_internal::StringHash, absl::lts_20240116::container_internal::StringEq, std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> > >::EmplaceDecomposable, const std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, google::protobuf::Descriptor::WellKnownType>&>
   fun:apply<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashMapPolicy<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>, absl::lts_20240116::container_internal::StringHash, absl::lts_20240116::container_internal::StringEq, std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> > >::EmplaceDecomposable, const std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, google::protobuf::Descriptor::WellKnownType>&>
   fun:apply<absl::lts_20240116::container_internal::raw_hash_set<absl::lts_20240116::container_internal::FlatHashMapPolicy<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>, absl::lts_20240116::container_internal::StringHash, absl::lts_20240116::container_internal::StringEq, std::allocator<std::pair<const std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType> > >::EmplaceDecomposable, const std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, google::protobuf::Descriptor::WellKnownType>&>
   fun:emplace<const std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, google::protobuf::Descriptor::WellKnownType>&>
   fun:insert<const std::pair<std::__cxx11::basic_string<char>, google::protobuf::Descriptor::WellKnownType>*>
   fun:insert
   fun:_ZN6google8protobuf14DescriptorPool6TablesC1Ev
   fun:_ZN6google8protobuf14DescriptorPoolC1EPNS0_18DescriptorDatabaseEPNS1_14ErrorCollectorE
   fun:NewGeneratedPool
   fun:_ZN6google8protobuf14DescriptorPool23internal_generated_poolEv
   fun:_ZN6google8protobuf14DescriptorPool24InternalAddGeneratedFileEPKvi
   fun:AddDescriptorsImpl
   fun:AddDescriptors
   fun:_ZN6google8protobuf8internal14AddDescriptorsEPKNS1_15DescriptorTableE
   fun:call_init.part.0
   fun:call_init
   fun:_dl_init
   obj:/usr/lib64/ld-2.28.so
}
{
   Protobuf 5.26.1 suppression 4
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN6google8protobuf14DescriptorPool6TablesC1Ev
   fun:_ZN6google8protobuf14DescriptorPoolC1EPNS0_18DescriptorDatabaseEPNS1_14ErrorCollectorE
   fun:_ZN6google8protobuf14DescriptorPool23internal_generated_poolEv
   fun:_ZN6google8protobuf14DescriptorPool24InternalAddGeneratedFileEPKvi
   fun:_ZN6google8protobuf8internal14AddDescriptorsEPKNS1_15DescriptorTableE
   ...
   fun:call_init
   fun:_dl_init
}
{
   Protobuf 5.26.1 suppression 5
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN4absl12lts_2024011618container_internal19HashSetResizeHelper15InitializeSlotsISaIcELm40ELb0ELm8EEEbRNS1_12CommonFieldsEPvT_.isra.0
   fun:_ZN4absl12lts_2024011618container_internal12raw_hash_setINS1_17FlatHashMapPolicyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN6google8protobuf10Descriptor13WellKnownTypeEEENS1_10StringHashENS1_8StringEqESaISt4pairIKS9_SD_EEE6resizeEm
   fun:_ZN4absl12lts_2024011618container_internal12raw_hash_setINS1_17FlatHashMapPolicyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN6google8protobuf10Descriptor13WellKnownTypeEEENS1_10StringHashENS1_8StringEqESaISt4pairIKS9_SD_EEE14prepare_insertEm
   fun:_ZN6google8protobuf14DescriptorPool6TablesC1Ev
   fun:_ZN6google8protobuf14DescriptorPoolC1EPNS0_18DescriptorDatabaseEPNS1_14ErrorCollectorE
   fun:_ZN6google8protobuf14DescriptorPool23internal_generated_poolEv
   fun:_ZN6google8protobuf14DescriptorPool24InternalAddGeneratedFileEPKvi
   fun:_ZN6google8protobuf8internal14AddDescriptorsEPKNS1_15DescriptorTableE
   ...
   fun:call_init
   fun:_dl_init
}
{
   Protobuf 5.26.1 suppression 6
   Memcheck:Leak
   match-leak-kinds: possible
   fun:_Znwm
   fun:_ZN4absl12lts_2024011618container_internal19HashSetResizeHelper15InitializeSlotsISaIcELm8ELb1ELm8EEEbRNS1_12CommonFieldsEPvT_.isra.0
   fun:_ZN4absl12lts_2024011618container_internal12raw_hash_setINS1_17FlatHashSetPolicyIPKN6google8protobuf8internal15DescriptorTableEEENS5_12_GLOBAL__N_123GeneratedMessageFactory20DescriptorByNameHashENSC_18DescriptorByNameEqESaIS9_EE6resizeEm
   fun:_ZN4absl12lts_2024011618container_internal12raw_hash_setINS1_17FlatHashSetPolicyIPKN6google8protobuf8internal15DescriptorTableEEENS5_12_GLOBAL__N_123GeneratedMessageFactory20DescriptorByNameHashENSC_18DescriptorByNameEqESaIS9_EE14prepare_insertEm
   fun:_ZN6google8protobuf14MessageFactory29InternalRegisterGeneratedFileEPKNS0_8internal15DescriptorTableE
   ...
   fun:call_init
   fun:_dl_init
}
{
   NPTL keeps a cache of thread stacks, and metadata for thread local storage is not freed for threads in that cache
   Memcheck:Leak
   match-leak-kinds: possible
   fun:calloc
   fun:UnknownInlinedFun
   fun:allocate_dtv
   fun:_dl_allocate_tls
   fun:allocate_stack
   fun:pthread_create@@GLIBC_2.34
}
{
   Fedora 40 dlopen suppression
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:UnknownInlinedFun
   fun:_dlfo_mappings_segment_allocate
   fun:_dl_find_object_update_1
   fun:_dl_find_object_update
   fun:dl_open_worker_begin
   fun:_dl_catch_exception
   fun:dl_open_worker
   fun:_dl_catch_exception
   fun:_dl_open
   fun:do_dlopen
   fun:_dl_catch_exception
   fun:_dl_catch_error
   fun:dlerror_run
   fun:__libc_dlopen_mode
}
{
   Fedora 40 onnxruntime 1.18.0 initialization suppression
   Memcheck:Leak
   match-leak-kinds: definite
   fun:calloc
   fun:cpuinfo_x86_linux_init
   ...
   fun:pthread_once@@GLIBC_2.34
   ...
}
{
   Apparent memory leak on Fedora 40.
   Memcheck:Leak
   match-leak-kinds: possible
   fun:malloc
   fun:__tsearch
   fun:tsearch
   fun:__add_to_environ
   fun:setenv
   ...
}
{
   Protobuf 5.26.1 suppression 7
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:_Znwm
   ...
   fun:_ZN6google8protobuf14DescriptorPool24InternalAddGeneratedFileEPKvi
   fun:_ZN6google8protobuf8internal14AddDescriptorsEPKNS1_15DescriptorTableE
   ...
}
{
   Protobuf 5.26.1 suppression 8
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:_Znwm
   ...
   fun:_ZN6google8protobuf8internal13OnShutdownRunEPFvPKvES3_
   fun:_ZN6google8protobuf8internal24InitProtobufDefaultsSlowEv
   ...
}
{
   Protobuf 5.26.1 suppression 9
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:_Znwm
   fun:_ZN6google8protobuf12_GLOBAL__N_123GeneratedMessageFactory9singletonEv
   fun:_ZN6google8protobuf14MessageFactory29InternalRegisterGeneratedFileEPKNS0_8internal15DescriptorTableE
   ...
   fun:call_init
   ...
}
{
   Protobuf 5.26.1 suppression 10
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:_Znwm
   fun:_ZN4absl12lts_2024011618container_internal19HashSetResizeHelper15InitializeSlotsISaIcELm8ELb1ELm8EEEbRNS1_12CommonFieldsEPvT_.isra.0
   fun:_ZN4absl12lts_2024011618container_internal12raw_hash_setINS1_17FlatHashSetPolicyIPKN6google8protobuf8internal15DescriptorTableEEENS5_12_GLOBAL__N_123GeneratedMessageFactory20DescriptorByNameHashENSC_18DescriptorByNameEqESaIS9_EE6resizeEm
   fun:_ZN4absl12lts_2024011618container_internal12raw_hash_setINS1_17FlatHashSetPolicyIPKN6google8protobuf8internal15DescriptorTableEEENS5_12_GLOBAL__N_123GeneratedMessageFactory20DescriptorByNameHashENSC_18DescriptorByNameEqESaIS9_EE14prepare_insertEm
   fun:_ZN6google8protobuf14MessageFactory29InternalRegisterGeneratedFileEPKNS0_8internal15DescriptorTableE
   ...
   fun:call_init
   ...
}
