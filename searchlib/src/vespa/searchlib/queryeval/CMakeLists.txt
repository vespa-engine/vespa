# Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.
vespa_add_library(searchlib_queryeval OBJECT
    SOURCES
    andnotsearch.cpp
    andsearch.cpp
    blueprint.cpp
    booleanmatchiteratorwrapper.cpp
    children_iterators.cpp
    create_blueprint_visitor_helper.cpp
    docid_with_weight_search_iterator.cpp
    dot_product_blueprint.cpp
    dot_product_search.cpp
    element_id_extractor.cpp
    emptysearch.cpp
    equiv_blueprint.cpp
    equivsearch.cpp
    exact_nearest_neighbor_iterator.cpp
    executeinfo.cpp
    fake_index.cpp
    fake_requestcontext.cpp
    fake_result.cpp
    fake_search.cpp
    fake_searchable.cpp
    field_spec.cpp
    filter_wrapper.cpp
    first_phase_rescorer.cpp
    flow.cpp
    full_search.cpp
    get_weight_from_node.cpp
    global_filter.cpp
    hitcollector.cpp
    intermediate_blueprints.cpp
    isourceselector.cpp
    iterator_pack.cpp
    iterators.cpp
    leaf_blueprints.cpp
    matching_elements_search.cpp
    monitoring_dump_iterator.cpp
    monitoring_search_iterator.cpp
    multibitvectoriterator.cpp
    multisearch.cpp
    near_search_utils.cpp
    nearest_neighbor_blueprint.cpp
    nearsearch.cpp
    nns_index_iterator.cpp
    orsearch.cpp
    posting_info.cpp
    predicate_blueprint.cpp
    predicate_search.cpp
    profiled_iterator.cpp
    ranksearch.cpp
    same_element_blueprint.cpp
    same_element_flags.cpp
    same_element_search.cpp
    searchable.cpp
    searchiterator.cpp
    simple_phrase_blueprint.cpp
    simple_phrase_search.cpp
    simpleresult.cpp
    simplesearch.cpp
    sorted_hit_sequence.cpp
    sourceblendersearch.cpp
    split_float.cpp
    termasstring.cpp
    termwise_blueprint_helper.cpp
    termwise_search.cpp
    truesearch.cpp
    unpackinfo.cpp
    weighted_set_term_blueprint.cpp
    weighted_set_term_search.cpp
    DEPENDS
)
