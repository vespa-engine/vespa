name: Mirror Copr RPMs to archive

on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: 'Run only non-destructive commands, skipping the destructive ones'
        required: false
        type: boolean
        default: true

  pull_request:
    paths:
      - .github/workflows/mirror-copr-rpms-to-archive.yml
      - .github/scripts/publish-unpublished-rpms-to-archive.sh
      - .github/scripts/upload-rpm-to-cloudsmith.sh
    branches:
      - master

  schedule:
   - cron: '0 6 * * *'

env:
  DRY_RUN: ${{ (inputs.dry-run || github.event_name == 'pull_request') && 'true' || '' }}
  # Get the service Slug from Spacelift output: https://vespaai.app.spacelift.io/stack/cloudsmith/outputs
  CLOUDSMITH_SERVICE_SLUG: 'gha-sync-rpm-mirrors-v-eng-ves'

permissions:
  contents: read
  id-token: write # Needed to use the OIDC Auth

defaults:
  run:
    # Specify to ensure "pipefail and errexit" are set.
    # Ref: https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#defaultsrunshell
    shell: bash

jobs:
  mirror:
    runs-on: ubuntu-latest

    container:
        image: almalinux:8
        volumes:
          - ${{ github.workspace }}:/workspace

    defaults:
      run:
        working-directory: /workspace

    strategy:
      matrix:
        arch:
          - x86_64
          - aarch64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Cloudsmith CLI + Auth
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.3
        with:
          oidc-namespace: 'vespa'
          oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE_SLUG }}

      - name: Install tools
        run: |
          dnf install -y dnf-plugins-core jq

      - name: Publish to ${{ matrix.arch }} mirror
        run: |
          .github/scripts/publish-unpublished-rpms-to-archive.sh ${{ matrix.arch }}
