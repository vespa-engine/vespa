#!/bin/bash
# Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.

set -eo pipefail

PIPELINE="$BUILDKITE_PLUGIN_FACTORY_REPORTER_PIPELINE_ID"
FIRST_STEP="$BUILDKITE_PLUGIN_FACTORY_REPORTER_FIRST_STEP"

if [[ $SKIP_BUILDKITE_PLUGINS == "true" ]]; then
    echo "SKIP_BUILDKITE_PLUGINS is set. Skipping factory reporter"
    exit 0
fi
if [[ -z $PIPELINE ]]; then
    echo "No pipeline ID found, skipping factory reporter"
    exit 0
fi

if [[ $BUILDKITE_PULL_REQUEST == "false" ]]; then
  JSON=$($BUILDKITE_BUILD_CHECKOUT_PATH/.buildkite/factory-command.sh create-build $PIPELINE)
  echo "Output from creating build : $JSON"

 set -x

  VESPA_FACTORY_BUILD_ID=$(jq -re '.buildId' <<< "$JSON")
  export VESPA_FACTORY_BUILD_ID

  VARIABLES=$(jq -r '.variables | to_entries | .[] | "export \(.key)=\(.value|tojson)"' <<< "$JSON")
  eval "$VARIABLES"

  VESPA_VERSION=$(jq -re .version <<< "$JSON")
  export VESPA_VERSION
  buildkite-agent meta-data set vespa-version $VESPA_VERSION

  START_SECONDS=$(date -d "$BUILDKITE_BUILD_STARTED_AT" +%s)
  echo "Pipeline started at: $START_SECONDS"
  export START_SECONDS
  buildkite-agent meta-data set start-seconds $START_SECONDS

  echo "Created factory build $VESPA_FACTORY_BUILD_ID for pipeline $PIPELINE"

  $BUILDKITE_BUILD_CHECKOUT_PATH/.buildkite/factory-command.sh update-build-status $PIPELINE running "Building"
  echo "Set factory build $VESPA_FACTORY_BUILD_ID status to running"

  JOB_JSON=$($BUILDKITE_BUILD_CHECKOUT_PATH/.buildkite/factory-command.sh update-buildkite-job-run $START_SECONDS $PIPELINE "running")
  echo "Output from updating job run : $JOB_JSON"

  set +x

else
  VESPA_VERSION="$(curl -sSLf 'https://api.factory.vespa.ai/factory/v1/latest-successful-build?platform=opensource_centos7&vespaMajor=8' | jq -re .version)"
  export VESPA_VERSION
  buildkite-agent meta-data set vespa-version $VESPA_VERSION
fi
